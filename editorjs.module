<?php

/**
 * @file
 * Primary module hooks for "editorjs" module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\NestedArray;
use Drupal\editorjs\Element\EditorJs;

/**
 * Implements hook_theme().
 */
function editorjs_theme(): array {
  $defs = \Drupal::service('plugin.manager.editorjs_tools')
    ->getDefinitions();
  $themes['editorjs'] = [
    'variables' => [
      'data' => [],
      'tools' => [],
    ],
  ];
  $moduleExtension = \Drupal::service('extension.list.module');
  $moduleHandler = \Drupal::moduleHandler();

  foreach ($defs as $def) {
    if (empty($def['register_theme'])) {
      continue;
    }

    // Not register theme if provides not exist.
    if (empty($def['provider']) || !$moduleHandler->moduleExists($def['provider'])) {
      continue;
    }

    $theme = empty($def['theme']) ? "editorjs_{$def['id']}" : $def['theme'];
    $theme = preg_replace([
      '/^[0-9]/',
      '/^(-[0-9])|^(--)/',
    ], ['_', '__'], $theme);
    $moduleDir = $moduleExtension->getPath($def['provider']);
    $themes[$theme] = [
      'variables' => [
        'attributes' => [],
        'data' => [],
      ],
      'path' => "$moduleDir/templates",
    ];
  }

  return $themes;
}

/**
 * Prepares variables for "editorjs.html.twig" template.
 *
 * @param array $variables
 *   An associative array containing:
 *   - data: The source data from EditorJs.
 */
function template_preprocess_editorjs(array &$variables): void {
  $data = $variables['data'];
  $tunes = [];

  foreach ($data as &$datum) {
    $tunes = NestedArray::mergeDeepArray([$tunes, $datum['tunes'] ?? []], TRUE);

    $datum = [
      '#theme' => "editorjs_{$datum['type']}",
      '#data' => $datum['data'],
    ];
  }

  $variables['data'] = $data;

  if (!empty($tunes)) {
    $variables['#attached']['drupalSettings']['editorjs']['tunes'] = $tunes;
  }

  EditorJs::attachLibraries($variables, TRUE);
}
